# https://numtide.github.io/devshell

# Faucet Contract

[[commands]]
name = "faucet-deploy"
category = "01 faucet contract"
command = """
  cd $(git rev-parse --show-toplevel)/01-faucet-contract
  echo "./01-faucet-contract/run-deploy-contract.js"
  ./run-deploy-contract.js
  """
help = "Deploy the faucet contract to devnet"

[[commands]]
name = "faucet-request"
category = "01 faucet contract"
command = """
  cd $(git rev-parse --show-toplevel)/01-faucet-contract
  ./run-request.js $@
  """
help = "Use a request file to send a request to the faucet contract on devnet"

# Goliath Wallet

[[commands]]
name = "goliath-start"
category = "02 goliath wallet"
command = """
  cd $(git rev-parse --show-toplevel)/02-goliath-wallet
  pnpm install
  pnpm run dev
  """
help = "Start the Goliath wallet frontend (Ctrl+C to stop)"

# Charkha Lending Protocol

[[commands]]
name = "charkha-start"
category = "03 charkha lending"
command = """
  cd $(git rev-parse --show-toplevel)/03-charkha-lending/frontend
  pnpm install
  pnpm run dev
  """
help = "Start the Charkha lending dapp (Ctrl+C to stop)"

# Devnet

[[commands]]
name = "devnet-start"
category = "devnet"
command = """
  cd $(git rev-parse --show-toplevel)/devnet
  echo "Starting devnet (takes about 60 seconds...)"
  git submodule update --init
  docker compose pull

  if [ ! -d "db" ]; then
    echo "db directory does not exist, creating one from snapshot."
    if [[ "$OSTYPE" == "linux-gnu"* ]]; then
      cp -r ../devnet-backup/db-linux db
    elif [[ "$OSTYPE" == "darwin"* ]]; then
      cp -r ../devnet-backup/db-macos db
    else
      echo "unknown operating system (only linux and macos supported)"
    fi
  fi

  docker compose -f docker-compose.minimal.yaml up --detach --remove-orphans
  """
help = "Start the devnet blockchain simulator"

[[commands]]
name = "devnet-clean"
category = "devnet"
command = """
  cd $(git rev-parse --show-toplevel)/devnet
  docker compose -f docker-compose.minimal.yaml down

  if [ -d "db" ]; then
    echo "Replacing db directory with snapshot."
    sudo rm -rf db
    if [[ "$OSTYPE" == "linux-gnu"* ]]; then
      cp -r ../devnet-backup/db-linux db
    elif [[ "$OSTYPE" == "darwin"* ]]; then
      cp -r ../devnet-backup/db-macos db
    else
      echo "unknown operating system (only linux and macos supported)"
    fi
  fi
  """
help = "Stop the devnet blockchain simulator and reset the database."

[[commands]]
name = "devnet-stop"
category = "devnet"
command = """
  cd $(git rev-parse --show-toplevel)/devnet
  docker compose -f docker-compose.minimal.yaml down
"""
help = "Stop the devnet blockchain simulator"

# Tools

[[commands]]
package = "nodejs-16_x"
category = "tools"
name = "node"
help = "The Node runtime and NPM package manager"

[[commands]]
package = "pact"
category = "tools"
name = "pact"
help = "The Pact programming language"

[[commands]]
package = "kda-tool"
category = "tools"
name = "kda"
help = "The KDA CLI tool"

[[commands]]
package = "nodePackages.pnpm"
category = "tools"
name = "pnpm"
help = "The performant node package manager"

[[commands]]
package = "z3"
category = "tools"
name = "z3"
help = "The Z3 theorem prover"

# Shell

[devshell]
name = "real-world-pact"
motd = "{202}ðŸ”¨ Welcome to the Real World Pact developer shell!{reset}\n$(type -p menu &>/dev/null && menu)\n"
